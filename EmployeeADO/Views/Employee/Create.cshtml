@model EmployeeADO.EmployeeEntity.Employee

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@*<script src="~/Content/CustomScript.js"></script>*@
@*<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />*@
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
@*<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<link href="~/Content/Site.css" rel="stylesheet" type="text/css"/>*@
<script src="~/Content/CustomScript.js"></script>


@using (Html.BeginForm("Create","Employee",FormMethod.Post, new { @id = "createFormID", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(false, "Please fill the correct details and enter")

    <div class="form-group">
        @Html.Label("FirstName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("FirstName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("LastName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("LastName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.gender , new List<SelectListItem>
       {
           new SelectListItem { Text="Male", Value="Male"},
           new SelectListItem { Text ="Female",Value = "Female"}
       },"Select Gender")
            @*@Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" id="sbmt" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/CreateValidator.js")
}